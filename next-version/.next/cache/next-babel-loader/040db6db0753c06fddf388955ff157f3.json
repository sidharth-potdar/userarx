{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/meghna/Desktop/next-version/pages/containers/Agency/Navbar/index.js\";\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { openModal, closeModal } from '@redq/reuse-modal';\nimport NavbarWrapper from 'reusecore/src/elements/Navbar';\nimport Drawer from 'reusecore/src/elements/Drawer';\nimport Button from 'reusecore/src/elements/Button';\nimport Logo from 'reusecore/src/elements/UI/Logo';\nimport HamburgMenu from 'common/src/components/HamburgMenu';\nimport ScrollSpyMenu from 'common/src/components/ScrollSpyMenu';\nimport { Container } from './navbar.style';\nimport SearchPanel from '../SearchPanel';\nimport LoginModal from '../LoginModal';\nimport CopyrightSection from '../CopyrightsSection';\nimport LogoImage from 'common/src/assets/image/agency/logo.png';\nimport { DrawerContext } from 'common/src/contexts/DrawerContext';\nimport data from 'common/src/data/Agency/'; // Default close button for modal\n\nconst CloseModalButton = () => __jsx(Button, {\n  className: \"modalCloseBtn\",\n  variant: \"fab\",\n  onClick: () => closeModal(),\n  icon: __jsx(\"i\", {\n    className: \"flaticon-plus-symbol\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}); // Alt close button for modal\n\n\nconst CloseModalButtonAlt = () => __jsx(Button, {\n  className: \"modalCloseBtn alt\",\n  variant: \"fab\",\n  onClick: () => closeModal(),\n  icon: __jsx(\"i\", {\n    className: \"flaticon-plus-symbol\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n});\n\nconst Navbar = ({\n  navbarStyle,\n  logoStyle\n}) => {\n  const {\n    state,\n    dispatch\n  } = useContext(DrawerContext); // Search modal handler\n\n  const handleSearchModal = () => {\n    openModal({\n      config: {\n        className: 'search-modal',\n        disableDragging: true,\n        width: '100%',\n        height: '100%',\n        animationFrom: {\n          transform: 'translateY(100px)'\n        },\n        // react-spring <Spring from={}> props value\n        animationTo: {\n          transform: 'translateY(0)'\n        },\n        //  react-spring <Spring to={}> props value\n        transition: {\n          mass: 1,\n          tension: 180,\n          friction: 26\n        }\n      },\n      component: SearchPanel,\n      componentProps: {},\n      closeComponent: CloseModalButtonAlt,\n      closeOnClickOutside: false\n    });\n  }; // Authentication modal handler\n\n\n  const handleLoginModal = () => {\n    openModal({\n      config: {\n        className: 'login-modal',\n        disableDragging: true,\n        width: '100%',\n        height: '100%',\n        animationFrom: {\n          transform: 'translateY(100px)'\n        },\n        // react-spring <Spring from={}> props value\n        animationTo: {\n          transform: 'translateY(0)'\n        },\n        //  react-spring <Spring to={}> props value\n        transition: {\n          mass: 1,\n          tension: 180,\n          friction: 26\n        }\n      },\n      component: LoginModal,\n      componentProps: {},\n      closeComponent: CloseModalButton,\n      closeOnClickOutside: false\n    });\n  }; // Toggle drawer\n\n\n  const toggleHandler = () => {\n    dispatch({\n      type: 'TOGGLE'\n    });\n  };\n\n  return __jsx(NavbarWrapper, _extends({}, navbarStyle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), __jsx(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, __jsx(Logo, {\n    href: \"#\",\n    logoSrc: LogoImage,\n    title: \"Agency\",\n    logoStyle: logoStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"textButton\",\n    onClick: handleSearchModal,\n    icon: __jsx(\"i\", {\n      className: \"flaticon-magnifying-glass\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }),\n    \"aria-label\": \"search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }), __jsx(Button, {\n    variant: \"textButton\",\n    onClick: handleLoginModal,\n    icon: __jsx(\"i\", {\n      className: \"flaticon-user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }),\n    \"aria-label\": \"login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), __jsx(Drawer, {\n    width: \"420px\",\n    placement: \"right\",\n    drawerHandler: __jsx(HamburgMenu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }),\n    open: state.isOpen,\n    toggleHandler: toggleHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, __jsx(ScrollSpyMenu, {\n    menuItems: data.menuItems,\n    drawerClose: true,\n    offset: -100,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), __jsx(CopyrightSection, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  })))));\n}; // Navbar style props\n\n\nNavbar.propTypes = {\n  navbarStyle: PropTypes.object,\n  logoStyle: PropTypes.object\n};\nNavbar.defaultProps = {\n  // Default navbar style\n  navbarStyle: {\n    minHeight: '70px'\n  },\n  // Default logo size\n  logoStyle: {\n    width: '128px',\n    height: 'auto'\n  }\n};\nexport default Navbar;","map":{"version":3,"sources":["/Users/meghna/Desktop/next-version/pages/containers/Agency/Navbar/index.js"],"names":["React","useContext","PropTypes","openModal","closeModal","NavbarWrapper","Drawer","Button","Logo","HamburgMenu","ScrollSpyMenu","Container","SearchPanel","LoginModal","CopyrightSection","LogoImage","DrawerContext","data","CloseModalButton","CloseModalButtonAlt","Navbar","navbarStyle","logoStyle","state","dispatch","handleSearchModal","config","className","disableDragging","width","height","animationFrom","transform","animationTo","transition","mass","tension","friction","component","componentProps","closeComponent","closeOnClickOutside","handleLoginModal","toggleHandler","type","display","alignItems","isOpen","menuItems","propTypes","object","defaultProps","minHeight"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { openModal, closeModal } from '@redq/reuse-modal';\r\nimport NavbarWrapper from 'reusecore/src/elements/Navbar';\r\nimport Drawer from 'reusecore/src/elements/Drawer';\r\nimport Button from 'reusecore/src/elements/Button';\r\nimport Logo from 'reusecore/src/elements/UI/Logo';\r\nimport HamburgMenu from 'common/src/components/HamburgMenu';\r\nimport ScrollSpyMenu from 'common/src/components/ScrollSpyMenu';\r\nimport { Container } from './navbar.style';\r\nimport SearchPanel from '../SearchPanel';\r\nimport LoginModal from '../LoginModal';\r\nimport CopyrightSection from '../CopyrightsSection';\r\n\r\nimport LogoImage from 'common/src/assets/image/agency/logo.png';\r\n\r\nimport { DrawerContext } from 'common/src/contexts/DrawerContext';\r\n\r\nimport data from 'common/src/data/Agency/';\r\n\r\n// Default close button for modal\r\nconst CloseModalButton = () => (\r\n  <Button\r\n    className=\"modalCloseBtn\"\r\n    variant=\"fab\"\r\n    onClick={() => closeModal()}\r\n    icon={<i className=\"flaticon-plus-symbol\" />}\r\n  />\r\n);\r\n\r\n// Alt close button for modal\r\nconst CloseModalButtonAlt = () => (\r\n  <Button\r\n    className=\"modalCloseBtn alt\"\r\n    variant=\"fab\"\r\n    onClick={() => closeModal()}\r\n    icon={<i className=\"flaticon-plus-symbol\" />}\r\n  />\r\n);\r\n\r\nconst Navbar = ({ navbarStyle, logoStyle }) => {\r\n  const { state, dispatch } = useContext(DrawerContext);\r\n\r\n  // Search modal handler\r\n  const handleSearchModal = () => {\r\n    openModal({\r\n      config: {\r\n        className: 'search-modal',\r\n        disableDragging: true,\r\n        width: '100%',\r\n        height: '100%',\r\n        animationFrom: { transform: 'translateY(100px)' }, // react-spring <Spring from={}> props value\r\n        animationTo: { transform: 'translateY(0)' }, //  react-spring <Spring to={}> props value\r\n        transition: {\r\n          mass: 1,\r\n          tension: 180,\r\n          friction: 26,\r\n        },\r\n      },\r\n      component: SearchPanel,\r\n      componentProps: {},\r\n      closeComponent: CloseModalButtonAlt,\r\n      closeOnClickOutside: false,\r\n    });\r\n  };\r\n\r\n  // Authentication modal handler\r\n  const handleLoginModal = () => {\r\n    openModal({\r\n      config: {\r\n        className: 'login-modal',\r\n        disableDragging: true,\r\n        width: '100%',\r\n        height: '100%',\r\n        animationFrom: { transform: 'translateY(100px)' }, // react-spring <Spring from={}> props value\r\n        animationTo: { transform: 'translateY(0)' }, //  react-spring <Spring to={}> props value\r\n        transition: {\r\n          mass: 1,\r\n          tension: 180,\r\n          friction: 26,\r\n        },\r\n      },\r\n      component: LoginModal,\r\n      componentProps: {},\r\n      closeComponent: CloseModalButton,\r\n      closeOnClickOutside: false,\r\n    });\r\n  };\r\n\r\n  // Toggle drawer\r\n  const toggleHandler = () => {\r\n    dispatch({\r\n      type: 'TOGGLE',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <NavbarWrapper {...navbarStyle}>\r\n      <Container>\r\n        <Logo\r\n          href=\"#\"\r\n          logoSrc={LogoImage}\r\n          title=\"Agency\"\r\n          logoStyle={logoStyle}\r\n        />\r\n        <div style={{ display: 'flex', alignItems: 'center' }}>\r\n          <Button\r\n            variant=\"textButton\"\r\n            onClick={handleSearchModal}\r\n            icon={<i className=\"flaticon-magnifying-glass\" />}\r\n            aria-label=\"search\"\r\n          />\r\n          <Button\r\n            variant=\"textButton\"\r\n            onClick={handleLoginModal}\r\n            icon={<i className=\"flaticon-user\" />}\r\n            aria-label=\"login\"\r\n          />\r\n          <Drawer\r\n            width=\"420px\"\r\n            placement=\"right\"\r\n            drawerHandler={<HamburgMenu />}\r\n            open={state.isOpen}\r\n            toggleHandler={toggleHandler}\r\n          >\r\n            <ScrollSpyMenu\r\n              menuItems={data.menuItems}\r\n              drawerClose={true}\r\n              offset={-100}\r\n            />\r\n            <CopyrightSection />\r\n          </Drawer>\r\n        </div>\r\n      </Container>\r\n    </NavbarWrapper>\r\n  );\r\n};\r\n\r\n// Navbar style props\r\nNavbar.propTypes = {\r\n  navbarStyle: PropTypes.object,\r\n  logoStyle: PropTypes.object,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  // Default navbar style\r\n  navbarStyle: {\r\n    minHeight: '70px',\r\n  },\r\n  // Default logo size\r\n  logoStyle: {\r\n    width: '128px',\r\n    height: 'auto',\r\n  },\r\n};\r\n\r\nexport default Navbar;\r\n"]},"metadata":{},"sourceType":"module"}