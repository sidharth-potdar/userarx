{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  /* loader default style */\\n  display: inline-flex;\\n  width: 14px;\\n  height: 14px;\\n  border-radius: 50%;\\n  overflow: hidden;\\n  border-width: 2px;\\n  border-style: solid;\\n  border-color: \", \";\\n  border-top-color: transparent !important;\\n\\n  /* animation goes here */\\n  \", \"\\n  /* Style system custome color variant */\\n  \", \"\\n  \", \"\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from 'styled-components';\nimport { variant } from 'styled-system';\nimport { colorStyle } from '../../assets/theme/customVariant';\nimport { AnimSpinner } from '../Animation';\nimport { base } from '../base';\nvar LoaderStyle = styled.span(_templateObject(), function (props) {\n  return props.loaderColor ? props.loaderColor : '#000000';\n}, AnimSpinner, colorStyle, base); // prop types can also be added from the style functions\n\nLoaderStyle.propTypes = _objectSpread({}, variant.propTypes);\nLoaderStyle.displayName = 'LoaderStyle';\nexport default LoaderStyle;","map":{"version":3,"sources":["/Users/meghna/Desktop/next-version/pages/components/Loader/loader.style.js"],"names":["styled","variant","colorStyle","AnimSpinner","base","LoaderStyle","span","props","loaderColor","propTypes","displayName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAASC,UAAT,QAA2B,kCAA3B;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,IAAT,QAAqB,SAArB;AAEA,IAAMC,WAAW,GAAGL,MAAM,CAACM,IAAV,oBASC,UAAAC,KAAK;AAAA,SAAKA,KAAK,CAACC,WAAN,GAAoBD,KAAK,CAACC,WAA1B,GAAwC,SAA7C;AAAA,CATN,EAabL,WAba,EAebD,UAfa,EAgBbE,IAhBa,CAAjB,C,CAmBA;;AACAC,WAAW,CAACI,SAAZ,qBACKR,OAAO,CAACQ,SADb;AAIAJ,WAAW,CAACK,WAAZ,GAA0B,aAA1B;AAEA,eAAeL,WAAf","sourcesContent":["import styled from 'styled-components';\r\nimport { variant } from 'styled-system';\r\nimport { colorStyle } from '../../assets/theme/customVariant';\r\nimport { AnimSpinner } from '../Animation';\r\nimport { base } from '../base';\r\n\r\nconst LoaderStyle = styled.span`\r\n  /* loader default style */\r\n  display: inline-flex;\r\n  width: 14px;\r\n  height: 14px;\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n  border-width: 2px;\r\n  border-style: solid;\r\n  border-color: ${props => (props.loaderColor ? props.loaderColor : '#000000')};\r\n  border-top-color: transparent !important;\r\n\r\n  /* animation goes here */\r\n  ${AnimSpinner}\r\n  /* Style system custome color variant */\r\n  ${colorStyle}\r\n  ${base}\r\n`;\r\n\r\n// prop types can also be added from the style functions\r\nLoaderStyle.propTypes = {\r\n  ...variant.propTypes\r\n};\r\n\r\nLoaderStyle.displayName = 'LoaderStyle';\r\n\r\nexport default LoaderStyle;\r\n"]},"metadata":{},"sourceType":"module"}