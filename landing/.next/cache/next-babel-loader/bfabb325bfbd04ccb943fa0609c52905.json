{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React, { Fragment } from 'react';\nimport RcDrawer from 'rc-drawer';\nimport 'rc-drawer/assets/index.css';\n\nvar Drawer = function Drawer(_ref) {\n  var className = _ref.className,\n      children = _ref.children,\n      closeButton = _ref.closeButton,\n      closeButtonStyle = _ref.closeButtonStyle,\n      drawerHandler = _ref.drawerHandler,\n      toggleHandler = _ref.toggleHandler,\n      open = _ref.open,\n      props = _objectWithoutProperties(_ref, [\"className\", \"children\", \"closeButton\", \"closeButtonStyle\", \"drawerHandler\", \"toggleHandler\", \"open\"]);\n\n  // Add all classs to an array\n  var addAllClasses = ['reusecore__drawer']; // className prop checking\n\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  return __jsx(Fragment, null, __jsx(RcDrawer, _extends({\n    open: open,\n    onMaskClick: toggleHandler,\n    className: addAllClasses.join(' ')\n  }, props), __jsx(\"div\", {\n    className: \"reusecore-drawer__close\",\n    onClick: toggleHandler,\n    style: closeButtonStyle\n  }, closeButton), children), __jsx(\"div\", {\n    className: \"reusecore-drawer__handler\",\n    style: {\n      display: 'inline-block'\n    },\n    onClick: toggleHandler\n  }, drawerHandler));\n};\n\nDrawer.defaultProps = {\n  width: '300px',\n  handler: false,\n  level: null\n};\nexport default Drawer;","map":null,"metadata":{},"sourceType":"module"}